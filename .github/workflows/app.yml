name: Build APK

on:
  workflow_dispatch:
    inputs:
      release_tag:
        required: true
        type: string
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          submodules: "recursive"
      - name: Set up JDK 21
        uses: actions/setup-java@v5
        with:
          java-version: "21"
          distribution: "temurin"
      - name: Decode Keystore
        uses: timheuer/base64-to-file@v1.2.4
        id: android_keystore
        with:
          fileName: "android_keystore.jks"
          encodedString: ${{ secrets.APP_KEYSTORE_BASE64 }}
      - name: Build APK
        run: |
          chmod 755 ./gradlew
          ./gradlew assembleRelease -Pandroid.injected.signing.store.file=${{ steps.android_keystore.outputs.filePath }} -Pandroid.injected.signing.store.password=${{ secrets.APP_KEYSTORE_PASSWORD }} -Pandroid.injected.signing.key.alias=${{ secrets.APP_KEYSTORE_ALIAS }} -Pandroid.injected.signing.key.password=${{ secrets.APP_KEY_PASSWORD }}
      - name: prepare upload
        run: |
          mv ${{ github.workspace }}/app/build/outputs/apk/release/*.apk ${{ github.workspace }}/app/build/outputs/apk/release/ModemPro_$(cat ${{ github.workspace }}/version.txt).apk
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: release-apk
          path: ${{ github.workspace }}/app/build/outputs/apk/release/*.apk
      - name: Upload to release
        uses: svenstaro/upload-release-action@v2
        if: github.event.inputs.release_tag != ''
        with:
          file: ${{ github.workspace }}/app/build/outputs/apk/release/*.apk
          tag: ${{ github.event.inputs.release_tag }}
          file_glob: true
          prerelease: false
